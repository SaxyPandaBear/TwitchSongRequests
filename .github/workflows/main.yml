name: CI

on:
  push:
    branches: [ mainline ]
  pull_request:
    branches: [ mainline ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.8
        uses: actions/setup-node@v1
        with:
          node-version: 12.8
      - name: Install UI dependencies
        run: npm ci
        working-directory: ./ui
      - name: Install Angular CLI
        run: sudo npm install -g @angular/cli
        working-directory: ./ui
      - name: Build UI
        run: ng build --aot --prod
        shell: bash
        working-directory: ./ui
      - name: Build Scala projects
        run: gradle assemble
        shell: bash
        working-directory: ./
  test:
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack:latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.8
        uses: actions/setup-node@v1
        with:
          node-version: 12.8
      - name: Install UI dependencies
        run: npm ci
        working-directory: ./ui
      - name: Install Angular CLI
        run: sudo npm install -g @angular/cli
      - name: Test UI
        run: ng test
        shell: bash
        working-directory: ./ui
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Set placeholder AWS Credentials in environment
        run: |
          echo "AWS_ACCESS_KEY_ID=abc123" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=foobar" >> $GITHUB_ENV
      - name: Test Scala projects
        run: gradle test
        shell: bash
        working-directory: ./
