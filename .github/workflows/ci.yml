name: Golang CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        check-latest: true
    - name: Build
      run: go build -v ./...
    - name: Test
      run: go test ./... -cover -v -timeout 10s -short

  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v2.4

  postgres-tests:
    needs: build
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: golang:1.25.0-alpine3.21

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install psql
        run: |
          apk update
          apk add postgresql

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Create test database
        run: |
          psql -U postgres -h postgres -f ./testdata/db.sql
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          PGPASSWORD: postgres

      - name: Populate test database
        run: |
          psql -U postgres -d testdb -h postgres -f ./testdata/data.sql
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          PGPASSWORD: postgres

      - name: Run tests
        run: go test ./... -run Postgres -v -timeout 120s
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
